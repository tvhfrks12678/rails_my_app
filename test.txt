- 初期表示

	- 全体
		- event 設定
			- drag 
			- delete
			- listData

		- 表示チェック
			- delet disable
			- 追加ボタンチェック


- 追加時
	- 部分
		- event 設定	
			- drag 
			- dlete
			- listData

	- 全体
		- 表示チェック
			- delet disable
			- 追加ボタンチェック






- drag 
- dlete
- listData


- add


- delet disable




a= document.querySelector('.input_field_list_item');
var p_prime = a.cloneNode(true);

  inputFieldListElement = document.querySelector('.input_field_list');

  inputFieldListElement.insertAdjacentElement(
    'beforeend',
    p_prime
  );

a.querySelectorAll('[value]')[1].value



// const CHOICE_INPUT_FIELD_LIST_ITEM_CONTENT_STRING_HTML = `
//   <div>
//     <i class="fa fa-sort fa-lg icon_action icon_sort_input_field_list_item" aria-hidden="true" draggable="true"></i>
//   </div>
//   <div class="input_field_list_item_box">
//     <input name="choices[][content]" class="form-control" type="text" value="">
//   </div>
//   <div class="input_field_list_item_box">
//     <input name="choices[][rhyme]" class="form-control" list="list_choice_rhyme" type="text" value="">
//   </div>
//   <div>
//     <i class="fa fa-trash fa-lg icon_action icon_delete_input_field_list_item" aria-hidden="true"></i>
//   </div>
// `;



  // let addInputFieldListItemElement = document.createElement('li');
  // const num = new Date().getTime().toString();

  // const inputFieldId = CHOICE_INPUT_FIELD_LIST_ITEM_PREFIX_ID + num;
  // addInputFieldListItemElement.id = inputFieldId;
  // addInputFieldListItemElement.classList.add(INPUT_FIELD_LIST_ITEM_CLASS);
  // addInputFieldListItemElement.insertAdjacentHTML(
  //   'afterbegin',
  //   CHOICE_INPUT_FIELD_LIST_ITEM_CONTENT_STRING_HTML
  // );

  // return addInputFieldListItemElement;
